clear; close all; clc;

acc_params = accelparams("MeasurementRange", 20, "Resolution", 2 / 2^16, ...
     "ConstantBias", [1, 2, 3], ...
     "AxesMisalignment", [0.01, 0.02, 0.03], ...
     "NoiseDensity", [0.01], ...
     "BiasInstability", 0, ...
     "RandomWalk", 0.004);
 
gyro_params = gyroparams("MeasurementRange", 250, ...
     "Resolution", 250 / 2^16, ...
     "ConstantBias", [deg2rad(1), deg2rad(2), deg2rad(3)], ...
     "AxesMisalignment", [0.01, 0.02, 0.03], ...
     "NoiseDensity", [0.001, 0.01, 0.01], ...
     "BiasInstability", 0.002, ...
     "RandomWalk", 0.004);
 
mag_params = magparams("MeasurementRange", 4800, "Resolution", 4800 / 2^14, ...
     "ConstantBias", [1, 2, 3], ...
     "AxesMisalignment", [0.1], ...
     "BiasInstability", [0], ...
     "NoiseDensity", [0.1, 0.1, 0.1], ...
     "RandomWalk", [0.01, 0.01, 0.01]);
% acc_params = accelparams("MeasurementRange", 20, "Resolution", 2 / 2^16, ...
%     "ConstantBias", 0, ...
%     "AxesMisalignment", 0, ...
%     "NoiseDensity", 0, ...
%     "BiasInstability", 0, ...
%     "RandomWalk", 0);
% 
% gyro_params = gyroparams("MeasurementRange", 250, ...
%     "Resolution", 250 / 2^16, ...
%     "ConstantBias", [0], ...
%     "AxesMisalignment", 0, ...
%     "NoiseDensity", 0, ...
%     "BiasInstability", 0, ...
%     "RandomWalk", 0);
% 
% mag_params = magparams("MeasurementRange", 4800, "Resolution", 4800 / 2^14, ...
%     "ConstantBias", 0, ...
%     "AxesMisalignment", 0, ...
%     "BiasInstability", 0, ...
%     "NoiseDensity", 0, ...
%     "RandomWalk", 0);


IMU = imuSensor('accel-gyro-mag');
IMU.Accelerometer = acc_params;
IMU.Gyroscope = gyro_params;
IMU.Magnetometer = mag_params;
IMU.SampleRate = 1000;

fs = 1000;
totalNumSamples = 15 * fs;

traj = kinematicTrajectory('SampleRate',fs);

accBody = zeros(totalNumSamples,3);
angVelBody = zeros(totalNumSamples,3);
angVelBody(1:5 * fs, 1) = pi/8;
angVelBody(5 * fs + 1 : 10 * fs, 2) = pi/5;
angVelBody(10 * fs + 1 : end, 3) = pi/2;

[~,orientationNED,~,accNED,angVelNED] = traj(accBody,angVelBody);

[accelReading, gyroReading, magReading] = IMU(accNED,angVelNED,orientationNED);

t = (0:(totalNumSamples-1))/IMU.SampleRate;
subplot(3,1,1)
plot(t,accelReading)
legend('X-axis','Y-axis','Z-axis')
title('Accelerometer Readings')
ylabel('Acceleration (m/s^2)')

subplot(3,1,2)
plot(t,gyroReading)
legend('X-axis','Y-axis','Z-axis')
title('Gyroscope Readings')
ylabel('Angular Velocity (rad/s)')

subplot(3,1,3)
plot(t,magReading)
legend('X-axis','Y-axis','Z-axis')
title('Magnetometer Readings')
xlabel('Time (s)')
ylabel('Magnetic Field (uT)')

[a, b, c, d] = parts(orientationNED);
p = [a, b, c, d];

figure;
plot(quat2eul(orientationNED) * 180 / pi)

writematrix(p, 'orientation_gt.csv')
writematrix(accBody, 'acc_body_gt.csv')
writematrix(angVelBody, 'ang_vel_body.csv')

writematrix(accelReading, 'acc.csv')
writematrix(gyroReading, 'gyro.csv')
writematrix(magReading, 'mag.csv')